{"remainingRequest":"/Users/jansonchia/vuetify-todo-app-master/client/node_modules/ts-loader/index.js??ref--12-1!/Users/jansonchia/vuetify-todo-app-master/client/src/api/api.ts","dependencies":[{"path":"/Users/jansonchia/vuetify-todo-app-master/client/src/api/api.ts","mtime":1651799814000},{"path":"/Users/jansonchia/vuetify-todo-app-master/client/node_modules/cache-loader/dist/cjs.js","mtime":1652367352297},{"path":"/Users/jansonchia/vuetify-todo-app-master/client/node_modules/ts-loader/index.js","mtime":1652367348834}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/jansonchia/vuetify-todo-app-master/client/src/api/api.ts","sourceRoot":"","sources":["/Users/jansonchia/vuetify-todo-app-master/client/src/api/api.ts"],"names":[],"mappings":"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","sourcesContent":["import {Location, Position} from \"@/types/position\";\nimport {JokeCollection} from \"@/types/jokes\";\nimport {InspirationalQuote, QuotableQuote, QuotableQuoteCollection, Quote} from \"@/types/quotes\";\nimport {range} from \"@/util/arrays\";\nimport {AstronautCollection} from \"@/types/astronauts\";\nimport {Article, HackerNews} from \"@/types/hackernews\";\nimport {Repo, User } from \"@/types/github\";\n\nconst iss_url = \"http://api.open-notify.org/iss-now.json\";\nconst joke_url = \"https://v2.jokeapi.dev/joke/Programming?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single&amount=10\";\nconst astro_url = \"http://api.open-notify.org/astros.json\";\nconst random_quotable_url = \"https://api.quotable.io/random\";\nconst quotable_url = \"https://api.quotable.io/quotes?page=\";\nconst top_stories_url = \"https://hacker-news.firebaseio.com/v0/topstories.json\";\nconst hacker_news_url = \"https://hacker-news.firebaseio.com/v0/item/\";\nconst inspiration_url = \"https://inspiration.goprogram.ai/\";\n\nasync function getLocation(): Promise<Location> {\n  return await (await fetch(iss_url)).json();\n}\n\nexport async function getPosition(): Promise<Position> {\n  const loc: Location = await getLocation();\n  return new Position(loc.timestamp, loc.iss_position);\n}\n\nasync function getJokeData(): Promise<JokeCollection> {\n  return await (await fetch(joke_url)).json();\n}\n\nasync function getJokeDataWithPrompt(prompt: string): Promise<JokeCollection> {\n  return await (await fetch(`https://v2.jokeapi.dev/joke/Programming?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single&contains=${prompt}`)).json();\n}\n\nexport async function getJokes(): Promise<string[]> {\n  const jokeData = await getJokeData();\n  return jokeData.jokes.map(it => it.joke);\n}\n\nexport async function getJokesWithPrompt(prompt: string): Promise<string[]> {\n  const jokeData = await getJokeDataWithPrompt(prompt);\n  return jokeData.jokes.map(it => it.joke);\n}\n\nasync function getAstroData(): Promise<AstronautCollection> {\n  return await (await fetch(astro_url)).json();\n}\n\nexport async function getAstronauts(): Promise<string[]> {\n  const astroData = await getAstroData();\n  return astroData.people.map(it => it.name);\n}\n\nexport async function getQuotableQuote(): Promise<QuotableQuote> {\n  return await (await fetch(random_quotable_url)).json();\n}\n\nexport async function getRandomQuotableQuote(): Promise<Quote> {\n  const quote = await getQuotableQuote();\n  return new Quote(quote.author, quote.content);\n}\n\nexport async function getQuotableQuoteCollection(page: number): Promise<QuotableQuoteCollection> {\n  return await (await fetch(quotable_url+`${page}`)).json();\n}\n\nexport async function getQuotableQuotes(page: number): Promise<QuotableQuote[]> {\n  const collection = await getQuotableQuoteCollection(page);\n  return collection.results;\n}\n\nexport async function getAllQuotableQuotes(): Promise<Quote[]> {\n  let arr = Array<Quote>();\n  for(const page of range(1, 96)) {\n    arr = arr.concat((await getQuotableQuotes(page)).map(it => new Quote(it.author, it.content)));\n  }\n  return arr;\n}\n\nexport async function getTopStories(): Promise<number[]> {\n  return await (await fetch(top_stories_url)).json();\n}\n\nexport async function getHackerNews(item: number): Promise<HackerNews> {\n  return await (await fetch(hacker_news_url+`${item}.json`)).json();\n}\n\nexport async function getAllTopStories(): Promise<Article[]> {\n  const topStories = await getTopStories();\n  const arr = Array<HackerNews>();\n  for(const index of topStories) {\n    arr.push(await getHackerNews(index));\n  }\n  return arr.map(it => new Article(it.title, it.by, it.time, it.text));\n}\n\nexport async function getInspirationalQuote(): Promise<InspirationalQuote> {\n  return await (await fetch(inspiration_url)).json();\n}\n\nexport async function getUser(username: string): Promise<User> {\n  return await (await fetch(\n    \"https://api.github.com/users/\" + username)).json();\n}\n\nexport async function getRepos(username: string): Promise<Repo[]> {\n  return await (await fetch(\n    `https://api.github.com/users/${username}/repos?per_page=100`)).json();\n}\n\n"]}]}